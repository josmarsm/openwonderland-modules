/**
 * Copyright (c) 2014, WonderBuilders, Inc., All Rights Reserved
 */

package org.jdesktop.wonderland.modules.fairbooth.client;

import com.wonderbuilders.modules.colortheme.client.ColorThemeComponent;
import com.wonderbuilders.modules.colortheme.client.ColorThemeComponentConstants;
import com.wonderbuilders.modules.colortheme.client.ColorThemeEditorPanel;
import com.wonderbuilders.modules.colortheme.common.ColorTheme;
import java.awt.Color;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.jdesktop.wonderland.client.cell.Cell;
import org.jdesktop.wonderland.client.cell.properties.CellPropertiesEditor;
import org.jdesktop.wonderland.client.cell.properties.annotation.PropertiesFactory;
import org.jdesktop.wonderland.client.cell.properties.spi.PropertiesFactorySPI;
import org.jdesktop.wonderland.modules.fairbooth.common.FairBoothConstants;
import org.jdesktop.wonderland.modules.fairbooth.common.FairBoothProperties;
import org.jdesktop.wonderland.modules.fairbooth.common.FairBoothServerState;
import org.jdesktop.wonderland.modules.sharedstate.client.SharedMapCli;
import org.jdesktop.wonderland.modules.sharedstate.client.SharedStateComponent;

/**
 *
 * @author Nilang
 */
@PropertiesFactory(FairBoothServerState.class)
public class FairBoothConfiguration extends javax.swing.JPanel implements PropertiesFactorySPI {

    private CellPropertiesEditor editor;
    private FairBoothCell parentCell;
    private int origColorTheme;
    private String origBoothName;
    private String origInfoText;
    private int origLeftPanelFrames;
    private int origRightPanelFrames;
    private int newColorTheme;
    private String newBoothName;
    private String newInfoText;
    private int newLeftPanelFrames;
    private int newRightPanelFrames;
    private Boolean dirty;    
    private int flg = 0;

    /** Creates new form FairBoothConfiguration */
    public FairBoothConfiguration() {
        initComponents();
        jTextField1.getDocument().addDocumentListener(new DocumentListener() {

            public void insertUpdate(DocumentEvent e) {
                checkDirty();
            }

            public void removeUpdate(DocumentEvent e) {
                checkDirty();
            }

            public void changedUpdate(DocumentEvent e) {
                checkDirty();
            }
        });

        jTextArea1.getDocument().addDocumentListener(new DocumentListener() {

            public void insertUpdate(DocumentEvent e) {
                checkDirty();
            }

            public void removeUpdate(DocumentEvent e) {
                checkDirty();
            }

            public void changedUpdate(DocumentEvent e) {
                checkDirty();
            }
        });
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setPreferredSize(new java.awt.Dimension(300, 250));

        jLabel1.setText("Booth Name:");

        jLabel2.setText("Info Text:");

        jLabel3.setText("Color Theme:");

        jLabel4.setText("Left Panel Frames:");

        jLabel5.setText("Right Panel Frmaes:");

        jTextField1.setColumns(10);

        jTextArea1.setColumns(15);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(2);
        jTextArea1.setTabSize(0);
        jTextArea1.setAutoscrolls(false);
        jScrollPane1.setViewportView(jTextArea1);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "4" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "4" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Red", "Orange", "Yellow", "Green", "Blue", "Purple", "Cool Dark", "Cool Medium", "Cool Pastel", "Warm Dark", "Warm Light", "Pastel Mix", "Art Deco Dark", "Art Deco Medium", "Art Deco Pastel", "Elegant", "Fun", "Fun Pastel", "Neutral", "Earth Tones", "Bold", "Muted", "Primary Colors", "Print Colors", " " }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jPanel1.setMinimumSize(new java.awt.Dimension(100, 30));
        jPanel1.setPreferredSize(new java.awt.Dimension(200, 26));

        jPanel15.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel15.setMaximumSize(new java.awt.Dimension(25, 25));
        jPanel15.setPreferredSize(new java.awt.Dimension(25, 25));

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel14.setMaximumSize(new java.awt.Dimension(25, 25));
        jPanel14.setPreferredSize(new java.awt.Dimension(25, 25));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel12.setMaximumSize(new java.awt.Dimension(25, 25));
        jPanel12.setPreferredSize(new java.awt.Dimension(25, 25));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );

        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel13.setMaximumSize(new java.awt.Dimension(25, 25));
        jPanel13.setPreferredSize(new java.awt.Dimension(25, 25));

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );

        jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel16.setMaximumSize(new java.awt.Dimension(25, 25));
        jPanel16.setPreferredSize(new java.awt.Dimension(25, 25));

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel11.setMaximumSize(new java.awt.Dimension(25, 25));
        jPanel11.setPreferredSize(new java.awt.Dimension(25, 25));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 21, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(2, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jButton1.setText("Reapply Theme");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.setMaximumSize(new java.awt.Dimension(86, 34));

        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("<html><body><b>For Advanced Users: </b><i>If the color <br />theme definition changes, <br />you will need to reapply the theme.</i></body></html>");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(144, 144, 144))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(0, 22, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        newLeftPanelFrames=Integer.parseInt(String.valueOf(jComboBox2.getSelectedItem()));
        checkDirty();
       
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
        newRightPanelFrames=Integer.parseInt(String.valueOf(jComboBox3.getSelectedItem()));
        checkDirty();
    }//GEN-LAST:event_jComboBox3ActionPerformed

    public void populateColorChips() {
        SharedStateComponent ssc = parentCell.getCellCache().getEnvironmentCell().getComponent(SharedStateComponent.class);
        SharedMapCli smc = ssc.get(ColorThemeComponentConstants.COLOR_THEME_SHARED_MAP);
        ColorTheme ct = (ColorTheme) smc.get(FairBoothConstants.colorThemes[newColorTheme]);
        
        jPanel11.setBackground(new Color(Integer.parseInt(ct.getColorMap().get("FFFFFF"),16)));
        jPanel12.setBackground(new Color(Integer.parseInt(ct.getColorMap().get("CCCCCC"),16)));
        jPanel13.setBackground(new Color(Integer.parseInt(ct.getColorMap().get("999999"),16)));
        jPanel14.setBackground(new Color(Integer.parseInt(ct.getColorMap().get("666666"),16)));
        jPanel15.setBackground(new Color(Integer.parseInt(ct.getColorMap().get("333333"),16)));
        jPanel16.setBackground(new Color(Integer.parseInt(ct.getColorMap().get("000000"),16)));
    }
    
    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
        newColorTheme=jComboBox4.getSelectedIndex();
        if(editor!=null && checkDirty()){
            editor.setPanelDirty(FairBoothConfiguration.class, dirty);
        }
        populateColorChips();
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //Re-apply theme
        SharedStateComponent ssc = parentCell.getCellCache().getEnvironmentCell().getComponent(SharedStateComponent.class);
        Map smc = ssc.get(ColorThemeComponentConstants.COLOR_THEME_SHARED_MAP);
        ColorTheme currentTheme = (ColorTheme) smc.get(FairBoothConstants.colorThemes[newColorTheme]);
        parentCell.ctc.previewColor(FairBoothConstants.colorThemes[newColorTheme], smc,currentTheme.getColorMap());
        List<ColorTheme> l = (List<ColorTheme>) smc.values();
        jPanel11.setBackground(new Color(Integer.parseInt(currentTheme.getColorMap().get("FFFFFF"),16)));
        jPanel12.setBackground(new Color(Integer.parseInt(currentTheme.getColorMap().get("CCCCCC"),16)));
        jPanel13.setBackground(new Color(Integer.parseInt(currentTheme.getColorMap().get("999999"),16)));
        jPanel14.setBackground(new Color(Integer.parseInt(currentTheme.getColorMap().get("666666"),16)));
        jPanel15.setBackground(new Color(Integer.parseInt(currentTheme.getColorMap().get("333333"),16)));
        jPanel16.setBackground(new Color(Integer.parseInt(currentTheme.getColorMap().get("000000"),16)));
        
        ColorThemeEditorPanel panel = new ColorThemeEditorPanel(currentTheme);
        Map<String, String> map = panel.getColorMap();
        currentTheme.setColorMap(map);
        
        Map<String, ColorTheme> tmpMap = new HashMap<String, ColorTheme>();
        for(ColorTheme ct : l){
            if(ct.getThemeName().equals(currentTheme.getThemeName())) {
                tmpMap.put(currentTheme.getThemeName(), currentTheme);
            } else {
                tmpMap.put(ct.getThemeName(), ct);
            }
        }
        
        // shared state is updated immediatelly!!!!!!
        editor.getCell().getComponent(ColorThemeComponent.class).previewColor(ColorTheme.NONE_THEME_NAME,tmpMap, currentTheme.getColorMap());
        editor.getCell().getComponent(ColorThemeComponent.class).previewColor(FairBoothConstants.colorThemes[newColorTheme],tmpMap, currentTheme.getColorMap());
        
        //change color for desk
        Cell boothCell = null;
        Iterator itr = parentCell.getChildren().iterator();
        while(itr.hasNext()) {
            Cell c = (Cell) itr.next();
            if(c.getName().equals("Booth Desk")) {
                boothCell = (Cell) c;
                break;
            }
        }
        
        // shared state is updated immediatelly!!!!!!
        boothCell.getComponent(ColorThemeComponent.class).previewColor(ColorTheme.NONE_THEME_NAME,smc, currentTheme.getColorMap());
        boothCell.getComponent(ColorThemeComponent.class).previewColor(FairBoothConstants.colorThemes[newColorTheme],smc, currentTheme.getColorMap());
        
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    public String getDisplayName() {
        return "FairBooth Configuration";
    }

    public void setCellPropertiesEditor(CellPropertiesEditor editor) {
        this.editor = editor;

    }

    public JPanel getPropertiesJPanel() {
        return this;
    }

    public void setConfiguration() {
        if (editor != null) {
            parentCell = (FairBoothCell) editor.getCell();

            FairBoothProperties fbp = (FairBoothProperties) parentCell.configMap.get("FairBoothConfig");
            if(fbp!=null) {
                origBoothName = fbp.getBoothName();
                origInfoText = fbp.getInfoText();
                origLeftPanelFrames = fbp.getLeftPanelFrames();
                origRightPanelFrames = fbp.getRightPanelFrames();
                origColorTheme = fbp.getColorTheme();
                newBoothName = origBoothName;
                newInfoText = origInfoText;
                newLeftPanelFrames = origLeftPanelFrames;
                newRightPanelFrames = origRightPanelFrames;
                newColorTheme = origColorTheme;

                //populate the values
                jTextField1.setText(fbp.getBoothName());
                jTextArea1.setText(fbp.getInfoText());
                jComboBox2.setSelectedIndex(FairBoothConstants.getLeftFrame[fbp.getLeftPanelFrames()]);
                jComboBox3.setSelectedIndex(FairBoothConstants.getRightFrame[fbp.getRightPanelFrames()]);
                jComboBox4.setSelectedIndex(fbp.getColorTheme());
                SharedStateComponent ssc = parentCell.getCellCache().getEnvironmentCell().getComponent(SharedStateComponent.class);
                SharedMapCli smc = ssc.get(ColorThemeComponentConstants.COLOR_THEME_SHARED_MAP);
                ColorTheme ct = (ColorTheme) smc.get(FairBoothConstants.colorThemes[newColorTheme]);
                jPanel11.setBackground(new Color(Integer.parseInt(ct.getColorMap().get("FFFFFF"),16)));
                jPanel12.setBackground(new Color(Integer.parseInt(ct.getColorMap().get("CCCCCC"),16)));
                jPanel13.setBackground(new Color(Integer.parseInt(ct.getColorMap().get("999999"),16)));
                jPanel14.setBackground(new Color(Integer.parseInt(ct.getColorMap().get("666666"),16)));
                jPanel15.setBackground(new Color(Integer.parseInt(ct.getColorMap().get("333333"),16)));
                jPanel16.setBackground(new Color(Integer.parseInt(ct.getColorMap().get("000000"),16)));
            }
            editor.setPanelDirty(FairBoothConfiguration.class, false);
        }
    }

    public void open() {
        restore();
    }

    public void close() {
    }

    public void restore() {
        if(flg==0)
            setConfiguration();
    }

    public void apply() {
        
        FairBoothProperties fbp = new FairBoothProperties();
        fbp.setBoothName(jTextField1.getText());
        fbp.setInfoText(jTextArea1.getText());
        fbp.setColorTheme(jComboBox4.getSelectedIndex());
        fbp.setLeftPanelFrames(Integer.parseInt(String.valueOf(jComboBox2.getSelectedItem())));
        fbp.setRightPanelFrames(Integer.parseInt(String.valueOf(jComboBox3.getSelectedItem())));
        
        boolean applytoright = false;
        boolean applytoleft = false;
        if(newRightPanelFrames!=origRightPanelFrames)
            applytoright = true;
        if(newLeftPanelFrames!=origLeftPanelFrames)
            applytoleft = true;
        int flag = 0;
        int ans = 99;
        if(newLeftPanelFrames<origLeftPanelFrames || newRightPanelFrames<origRightPanelFrames) {
            flag=1;
        }
        else {
            origLeftPanelFrames = newLeftPanelFrames;
            origRightPanelFrames = newRightPanelFrames;
        }
        
        if(flag==1) {
            Object[] options = {"Change Configuration","Cancel"};
            ans = JOptionPane.showOptionDialog(this, "Changing the Fair Booth configuration "
                    + "will cause the contents of your frame(s) to be lost.", "", JOptionPane.YES_NO_OPTION
                    ,JOptionPane.WARNING_MESSAGE,null,options,options[1]);
            if(ans==1)
                flg=1;
            else
                flg=0;
        }
        else {
            ans=0;
        }
     
        if(ans==0)
        {
            //user clicks change,save the values in shared map
            if(applytoright) {
                FairBoothServerState fbss = (FairBoothServerState) editor.getCellServerState();
                fbss.setRightPanelFrames(Integer.parseInt(String.valueOf(jComboBox3.getSelectedItem())));
                editor.addToUpdateList(fbss);
                parentCell.AddImageFramesInRightPanel(Integer.parseInt(String.valueOf(jComboBox3.getSelectedItem())));
            }
            if(applytoleft) {
                FairBoothServerState fbss = (FairBoothServerState) editor.getCellServerState();
                fbss.setLeftPanelFrames(Integer.parseInt(String.valueOf(jComboBox2.getSelectedItem())));
                editor.addToUpdateList(fbss);
                parentCell.AddImageFramesInLeftPanel(Integer.parseInt(String.valueOf(jComboBox2.getSelectedItem())));
            }
            parentCell.configMap.put("FairBoothConfig", fbp);
        }
        else
        {
            //user clicks cancel,re-populate the old value
            jComboBox2.setSelectedIndex(FairBoothConstants.getLeftFrame[origLeftPanelFrames]);
            jComboBox3.setSelectedIndex(FairBoothConstants.getRightFrame[origRightPanelFrames]);
            jTextField1.setText(origBoothName);
            jTextArea1.setText(origInfoText);
            jComboBox4.setSelectedIndex(origColorTheme);
        }
        editor.setPanelDirty(FairBoothConfiguration.class, dirty);
    }

    public boolean checkDirty() {
        dirty = false;
        if (jTextField1.getText() != null) {
            dirty |= !origBoothName.equals(jTextField1.getText());
            newBoothName = jTextField1.getText();
        } else {
            dirty |= !origBoothName.equals(newBoothName);
        }
        if (jTextField1.getText() != null) {
            dirty |= !origInfoText.equals(jTextField1.getText());
            newInfoText = jTextField1.getText();
        } else {
            dirty |= !origInfoText.equals(newInfoText);
        }
        dirty |= !(origColorTheme == newColorTheme);
        dirty |= !(origLeftPanelFrames == newLeftPanelFrames);
        dirty |= !(origRightPanelFrames == newRightPanelFrames);
         if (editor != null) {
            editor.setPanelDirty(FairBoothConfiguration.class, dirty);
        }
        return dirty;
    }
}

