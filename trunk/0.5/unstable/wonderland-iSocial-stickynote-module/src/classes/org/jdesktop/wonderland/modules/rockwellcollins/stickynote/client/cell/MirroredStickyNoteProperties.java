/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MirroredStickyNoteProperties.java
 *
 * Created on Sep 12, 2010, 9:45:31 PM
 */

package org.jdesktop.wonderland.modules.rockwellcollins.stickynote.client.cell;

import javax.swing.JPanel;
import org.jdesktop.wonderland.client.cell.properties.CellPropertiesEditor;
import org.jdesktop.wonderland.client.cell.properties.annotation.PropertiesFactory;
import org.jdesktop.wonderland.client.cell.properties.spi.PropertiesFactorySPI;
import org.jdesktop.wonderland.modules.rockwellcollins.stickynote.common.cell.MirroredStickyNoteCellServerState;
import org.jdesktop.wonderland.modules.sharedstate.client.SharedMapCli;
import org.jdesktop.wonderland.modules.sharedstate.common.SharedString;

/**
 *
 * @author Ryan Babiuch
 */
@PropertiesFactory(MirroredStickyNoteCellServerState.class)
public class MirroredStickyNoteProperties extends javax.swing.JPanel
    implements PropertiesFactorySPI {

    private CellPropertiesEditor editor = null;
    private String originalGroup;
    /** Creates new form MirroredStickyNoteProperties */
    public MirroredStickyNoteProperties() {
        initComponents();
    }

    public String getDisplayName() {
        return "Mirrored Sticky Note";
    }
    public void open() {
        if(editor!=null) {
            MirroredStickyNoteCell cell = (MirroredStickyNoteCell)editor.getCell();
            SharedMapCli map = cell.getMap();

            //get original values
            SharedString group = (SharedString)map.get("group", SharedString.class);
            originalGroup = group.getValue();

            //update gui
            jTextField1.setText(originalGroup);

        }
    }

    public void apply() {
        if(!jTextField1.getText().equals(originalGroup)) {
            SharedMapCli map
                    =((MirroredStickyNoteCell)editor.getCell()).getMap();
            map.put("group", SharedString.valueOf(jTextField1.getText()));
            
        }
    }

    public JPanel getPropertiesJPanel() {
        return this;
    }

    public void setCellPropertiesEditor(CellPropertiesEditor editor) {
        this.editor = editor;
    }

    public void restore() {
        jTextField1.setText(originalGroup);
    }

    public void close() {
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Group Name:");

        jTextField1.setText("global");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTextField1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jTextField1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(252, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        if(!jTextField1.getText().equals(originalGroup)) {
            if(editor != null) {
                editor.setPanelDirty(MirroredStickyNoteProperties.class, true);
            }
        }
        else {
            if(editor != null) {
                editor.setPanelDirty(MirroredStickyNoteProperties.class, false);
            }
        }
    }//GEN-LAST:event_jTextField1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

}
