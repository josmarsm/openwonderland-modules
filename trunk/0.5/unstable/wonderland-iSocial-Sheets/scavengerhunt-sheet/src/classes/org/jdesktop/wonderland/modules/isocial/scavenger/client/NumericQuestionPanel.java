/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.jdesktop.wonderland.modules.isocial.scavenger.client;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import org.jdesktop.wonderland.client.cell.asset.AssetUtils;
import org.jdesktop.wonderland.modules.isocial.scavenger.common.AutoQuestionNumber;
import org.jdesktop.wonderland.modules.isocial.scavenger.common.Question;

/**
 *
 * @author vlada
 */
public class NumericQuestionPanel extends javax.swing.JPanel {
    
    private static final Logger LOGGER = Logger.getLogger(NumericQuestionPanel.class.getName());
    
    private AutoQuestionNumber autoQuestion;
    private ImageIcon correctIcon;
    private ImageIcon wrongIcon;
    private JDialog parent;
    
    /** Indicates whether dialog should be closed when submit button is clicked. */
    private boolean doClose;

    /**
     * Creates new form NumericQuestionPanel
     */
    public NumericQuestionPanel(Question question, JDialog parent) {
        initComponents();
        this.parent = parent;
        doClose = false;
        correctIcon = new ImageIcon(getClass().getResource("/org/jdesktop/wonderland/modules/isocial/scavenger/client/resources/icons/check-mark.png"));
        wrongIcon = new ImageIcon(getClass().getResource("/org/jdesktop/wonderland/modules/isocial/scavenger/client/resources/icons/Red_x.png"));
        autoQuestion = question.getNumericQuestion();
        StringBuilder sb = new StringBuilder("<html><body style=\"width:150px\">");
        sb.append(question.getQuestionText()).append("</body></html>");
        questionTextLabel.setText(sb.toString());
        unitLabel.setText(autoQuestion.getUnit());
        feedbackLabel.setText("    ");
        if (question.getNumericQuestion().getImageUrl() != null) {
            try {
                URL url = AssetUtils.getAssetURL(question.getNumericQuestion().getImageUrl());
                ImageIcon img = new ImageIcon(url);
                if (img.getIconWidth() > 128) {
                    imageLabel.setIcon(new ImageIcon(img.getImage().getScaledInstance(128, 128, 0)));
                } else {
                    imageLabel.setIcon(img);
                }

            } catch (MalformedURLException ex) {
                LOGGER.log(Level.SEVERE, "Could not load question image: " + ex.getMessage());
            }
        } 
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        questionTextLabel = new javax.swing.JLabel();
        imageLabel = new javax.swing.JLabel();
        answerField = new javax.swing.JTextField();
        unitLabel = new javax.swing.JLabel();
        feedbackLabel = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();

        questionTextLabel.setText("jLabel1");
        questionTextLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        unitLabel.setText("jLabel3");
        unitLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        feedbackLabel.setText("jLabel4");

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(19, 19, 19)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(6, 6, 6)
                        .add(feedbackLabel))
                    .add(layout.createSequentialGroup()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(questionTextLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(layout.createSequentialGroup()
                                .add(answerField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 138, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(unitLabel)))
                        .add(47, 47, 47)
                        .add(imageLabel)))
                .addContainerGap(139, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(submitButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(imageLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(questionTextLabel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(27, 27, 27)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(answerField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(unitLabel))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(feedbackLabel)
                .add(18, 18, 18)
                .add(submitButton)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        if(doClose){
            parent.dispose();
        }
        String answer = answerField.getText();
        if(answer == null || answer.isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter value for answer", "Answer required", JOptionPane.ERROR_MESSAGE);
            return;
        }
        float val = 0;
        try {
            val = Float.parseFloat(answer);
        } catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "Please enter valid decimal number", "Invalid number", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        boolean correct = autoQuestion.isAnswerCorrect(val);
        if(correct){
            unitLabel.setIcon(correctIcon);
            feedbackLabel.setText(autoQuestion.getGlobalFeedbackCorrect() + " " + autoQuestion.getFeedbackCorrect());
            // close window after 500 ms
           doClose = true;
           submitButton.setText("Close");
        } else {
            unitLabel.setIcon(wrongIcon);
            feedbackLabel.setText(autoQuestion.getFeedbackWrong(val));
        }
       
    }//GEN-LAST:event_submitButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField answerField;
    private javax.swing.JLabel feedbackLabel;
    private javax.swing.JLabel imageLabel;
    private javax.swing.JLabel questionTextLabel;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel unitLabel;
    // End of variables declaration//GEN-END:variables
}
